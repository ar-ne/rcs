plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.1'
    id("com.github.johnrengelman.processes") version "0.5.0"
    id("org.springdoc.openapi-gradle-plugin") version "1.3.0"
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.google.protobuf" version "0.8.14"
}

group = 'ar.ne.rcs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springBootAdminVersion', "2.3.1")
}

dependencies {
    implementation project(path: ':rcs-shared')
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    implementation 'it.ozimov:embedded-redis:0.7.2'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.2'
    implementation 'org.springframework.integration:spring-integration-ip:5.4.2'
    implementation 'com.google.code.gson:gson:2.8.6'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.github.docker-java:docker-java-core:3.2.7'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.7'

    implementation 'io.github.lognet:grpc-spring-boot-starter:4.4.2'
    implementation 'com.hubspot.jackson:jackson-datatype-protobuf:0.9.11-jackson2.8'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
    }
}

test {
    useJUnitPlatform()
}
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.14.0'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.35.0'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                task.doFirst {
                    delete(task.outputs)
                }
                java {
                    outputSubDir = 'java'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'java'
                }
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir "${project(":rcs-shared-proto").projectDir}/proto"
        }
        java{
            srcDir 'build/generated/source/proto/main/java'
        }
    }
}