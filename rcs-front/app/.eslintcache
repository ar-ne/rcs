[{"C:\\Users\\Administrator\\Desktop\\app\\src\\index.tsx":"1","C:\\Users\\Administrator\\Desktop\\app\\src\\reportWebVitals.ts":"2","C:\\Users\\Administrator\\Desktop\\app\\src\\App.tsx":"3","C:\\Users\\Administrator\\Desktop\\app\\src\\Pages\\VideoDeviceMRC.tsx":"4","C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\DeviceDetail.tsx":"5","C:\\Users\\Administrator\\Desktop\\app\\src\\utils\\index.ts":"6","C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\StatusIcon.tsx":"7","C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\EmptyTable.tsx":"8","C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\TablePager.tsx":"9","C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\JobList.tsx":"10","C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\AddJobForm.tsx":"11","D:\\dev\\rcs\\rcs-front\\app\\src\\index.tsx":"12","D:\\dev\\rcs\\rcs-front\\app\\src\\App.tsx":"13","D:\\dev\\rcs\\rcs-front\\app\\src\\Pages\\VideoDeviceMRC.tsx":"14","D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\StatusIcon.tsx":"15","D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\EmptyTable.tsx":"16","D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\TablePager.tsx":"17","D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\DeviceDetail.tsx":"18","D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\JobList.tsx":"19","D:\\dev\\rcs\\rcs-front\\app\\src\\utils\\index.ts":"20","D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\AddJobForm.tsx":"21","C:\\dev\\rcs\\rcs-front\\app\\src\\index.tsx":"22","C:\\dev\\rcs\\rcs-front\\app\\src\\App.tsx":"23","C:\\dev\\rcs\\rcs-front\\app\\src\\Pages\\VideoDeviceMRC.tsx":"24","C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\StatusIcon.tsx":"25","C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\DeviceDetail.tsx":"26","C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\EmptyTable.tsx":"27","C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\JobList.tsx":"28","C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\TablePager.tsx":"29","C:\\dev\\rcs\\rcs-front\\app\\src\\utils\\index.ts":"30","C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\AddJobForm.tsx":"31"},{"size":344,"mtime":1608097206289,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1608084513442,"results":"34","hashOfConfig":"33"},{"size":238,"mtime":1608192054076,"results":"35","hashOfConfig":"33"},{"size":9970,"mtime":1608886496623,"results":"36","hashOfConfig":"33"},{"size":11275,"mtime":1608972535365,"results":"37","hashOfConfig":"33"},{"size":355,"mtime":1608972570941,"results":"38","hashOfConfig":"33"},{"size":1777,"mtime":1608787697170,"results":"39","hashOfConfig":"33"},{"size":3881,"mtime":1608278184114,"results":"40","hashOfConfig":"33"},{"size":786,"mtime":1608278880250,"results":"41","hashOfConfig":"33"},{"size":7968,"mtime":1608972657416,"results":"42","hashOfConfig":"33"},{"size":8829,"mtime":1608972535345,"results":"43","hashOfConfig":"33"},{"size":344,"mtime":1608097206289,"results":"44","hashOfConfig":"45"},{"size":238,"mtime":1608192054076,"results":"46","hashOfConfig":"45"},{"size":9970,"mtime":1608886496623,"results":"47","hashOfConfig":"45"},{"size":1777,"mtime":1608787697170,"results":"48","hashOfConfig":"45"},{"size":3881,"mtime":1608278184114,"results":"49","hashOfConfig":"45"},{"size":786,"mtime":1608278880250,"results":"50","hashOfConfig":"45"},{"size":11275,"mtime":1608972535365,"results":"51","hashOfConfig":"45"},{"size":7968,"mtime":1608972657416,"results":"52","hashOfConfig":"45"},{"size":355,"mtime":1608972570941,"results":"53","hashOfConfig":"45"},{"size":8829,"mtime":1608972535345,"results":"54","hashOfConfig":"45"},{"size":344,"mtime":1608097206289,"results":"55","hashOfConfig":"56"},{"size":2397,"mtime":1610582905770,"results":"57","hashOfConfig":"56"},{"size":9970,"mtime":1608886496623,"results":"58","hashOfConfig":"56"},{"size":1777,"mtime":1608787697170,"results":"59","hashOfConfig":"56"},{"size":11275,"mtime":1608972535365,"results":"60","hashOfConfig":"56"},{"size":3881,"mtime":1608278184114,"results":"61","hashOfConfig":"56"},{"size":7968,"mtime":1608972657416,"results":"62","hashOfConfig":"56"},{"size":786,"mtime":1608278880250,"results":"63","hashOfConfig":"56"},{"size":355,"mtime":1608972570941,"results":"64","hashOfConfig":"56"},{"size":8829,"mtime":1608972535345,"results":"65","hashOfConfig":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"189kx13",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1y1jrzh",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ypcpx2",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\app\\src\\index.tsx",[],["133","134"],"C:\\Users\\Administrator\\Desktop\\app\\src\\reportWebVitals.ts",[],["135","136"],"C:\\Users\\Administrator\\Desktop\\app\\src\\App.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Pages\\VideoDeviceMRC.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\DeviceDetail.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\utils\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\StatusIcon.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\EmptyTable.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\TablePager.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\JobList.tsx",[],"C:\\Users\\Administrator\\Desktop\\app\\src\\Components\\VideoDeviceMR\\AddJobForm.tsx",["137"],"import React, {useCallback, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogProps,\r\n    DialogTitle,\r\n    FormControl,\r\n    Grid,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport {BaseInfo} from \"../../Interfaces/VideoDeviceMR\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport {CloseIcon} from \"@material-ui/data-grid\";\r\nimport styled from \"styled-components\";\r\nimport dateFormat from \"dateformat\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport interface AddJobFormProps extends DialogProps {\r\n    targets: BaseInfo[],\r\n    handleClose: () => void;\r\n    form: Partial<{\r\n        mode: number,\r\n        targets: BaseInfo[],\r\n        os_version: string,\r\n        command: string,\r\n        schedule: Date\r\n    }>\r\n}\r\n\r\nexport const AddJobForm: React.FC<AddJobFormProps> = (p: AddJobFormProps) => {\r\n    const [form, setForm] = useState({\r\n        mode: 0,\r\n        targets: [] as BaseInfo[],\r\n        os_version: \"\",\r\n        command: \"\",\r\n        schedule: new Date(),\r\n        ...p.form\r\n    });\r\n    const {enqueueSnackbar} = useSnackbar();\r\n\r\n    const handleConfirm = useCallback(() => {\r\n        switch (form.mode) {\r\n            case 0:\r\n                break;\r\n            case 1:\r\n                if (form.targets.length === 0) {\r\n                    enqueueSnackbar(\"请选择设备！\", {variant: \"warning\"})\r\n                    return;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (form.os_version.trim() === \"\") {\r\n                    enqueueSnackbar(\"请选择系统版本！\", {variant: \"warning\"})\r\n                    return;\r\n                }\r\n                break;\r\n        }\r\n        if (form.command.trim() === \"\") {\r\n            enqueueSnackbar(\"请输入命令！\", {variant: \"warning\"})\r\n            return;\r\n        }\r\n\r\n        axios.post(\"/web/ajax/VideoDeviceMR.ashx?operation=AddJob\", {...form,schedule:dateFormat(form.schedule,\"yyyy-mm-dd'T'HH:MM:ss\")})\r\n            .then(r => {\r\n                enqueueSnackbar(`${r.data}条数据已成功添加`, {variant: \"success\"});\r\n            });\r\n\r\n        p.handleClose();\r\n    }, [enqueueSnackbar, form, p])\r\n    return (\r\n        <Dialog style={{width: \"100%\"}} {...p}>\r\n            <DialogTitle>添加任务</DialogTitle>\r\n            <DialogContent>\r\n                <Grid container justify={\"flex-start\"} alignItems={\"center\"} spacing={1}>\r\n                    <Grid item xs={12} container spacing={1}>\r\n                        <Grid item xs={4}>\r\n                            <FormControl style={{width: \"100%\"}}>\r\n                                <InputLabel>目标设备</InputLabel>\r\n                                <Select\r\n                                    value={form.mode}\r\n                                    onChange={event => setForm({...form, mode: event.target.value as number})}>\r\n                                    <MenuItem value={0}>全部设备</MenuItem>\r\n                                    <MenuItem value={1}>指定设备</MenuItem>\r\n                                    <MenuItem value={2}>系统版本</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={8}>\r\n                            {form.mode === 1 ? (\r\n                                <Autocomplete\r\n                                    disableCloseOnSelect\r\n                                    options={p.targets}\r\n                                    getOptionLabel={(option) => `${option.deviceName} ${option.schoolName} ${option.imei} ${option.os_version}`}\r\n                                    groupBy={(option => option.schoolName)}\r\n                                    renderOption={(option, {inputValue}) => {\r\n                                        const text = `${option.deviceName} ${option.schoolName} ${option.imei} ${option.os_version}`;\r\n                                        const matches = match(text, inputValue);\r\n                                        const parts = parse(text, matches);\r\n                                        return (\r\n                                            <div>\r\n                                                {parts.map((part, index) => (\r\n                                                    <span\r\n                                                        key={index}\r\n                                                        style={{fontWeight: part.highlight ? 700 : 400}}>\r\n                                                        {part.text}\r\n                                                    </span>\r\n                                                ))}\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                    defaultValue={p.targets}\r\n                                    renderTags={((value, getTagProps) =>\r\n                                        value.map((a, index) => <Tag label={a.imei} {...getTagProps({index})}/>))}\r\n                                    onChange={(event, value) =>\r\n                                        setForm({...form, targets: value})}\r\n                                    multiple\r\n                                    limitTags={1}\r\n                                    style={{width: 300}}\r\n                                    renderInput={(params) =>\r\n                                        <TextField {...params} label=\"设备\"/>}\r\n                                />\r\n                            ) : null}\r\n                            {form.mode === 2 ? (\r\n                                <Autocomplete\r\n                                    options={Array.from(new Set(p.targets.map(d => d.os_version)))}\r\n                                    getOptionLabel={(option) => option as string}\r\n                                    onChange={(e, v) => setForm({...form, os_version: v || \"\"})}\r\n                                    style={{width: 300}}\r\n                                    renderInput={(params) =>\r\n                                        <TextField {...params} label=\"版本\"/>}\r\n                                />\r\n                            ) : null}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            rows={3}\r\n                            label={\"命令\"}\r\n                            multiline\r\n                            style={{width: \"100%\"}}\r\n                            onChange={event => setForm({...form, command: event.target.value as string})}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            label={\"时间\"}\r\n                            type=\"datetime-local\"\r\n                            value={dateFormat(form.schedule, \"yyyy-mm-dd'T'HH:MM:ss\")}\r\n                            onChange={event => setForm({...form, schedule: new Date(event.target.value)})}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    color={\"secondary\"}\r\n                    variant={\"contained\"}\r\n                    onClick={p.handleClose}>\r\n                    关闭\r\n                </Button>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    variant={\"contained\"}\r\n                    onClick={handleConfirm}>\r\n                    确定\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nconst Tag = styled(({label, onDelete, ...props}) => (\r\n    <div {...props}>\r\n        <span>{label}</span>\r\n        <CloseIcon onClick={onDelete}/>\r\n    </div>\r\n))`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 24px;\r\n  margin: 2px;\r\n  line-height: 22px;\r\n  background-color: #fafafa;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 2px;\r\n  box-sizing: content-box;\r\n  padding: 0 4px 0 10px;\r\n  outline: 0;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    border-color: #40a9ff;\r\n    background-color: #e6f7ff;\r\n  }\r\n\r\n  & span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n  }`;\r\n",["138","139"],"D:\\dev\\rcs\\rcs-front\\app\\src\\index.tsx",[],["140","141"],"D:\\dev\\rcs\\rcs-front\\app\\src\\App.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Pages\\VideoDeviceMRC.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\StatusIcon.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\EmptyTable.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\TablePager.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\DeviceDetail.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\JobList.tsx",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\utils\\index.ts",[],"D:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\AddJobForm.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\index.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\App.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Pages\\VideoDeviceMRC.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\StatusIcon.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\DeviceDetail.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\EmptyTable.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\JobList.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\TablePager.tsx",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\utils\\index.ts",[],"C:\\dev\\rcs\\rcs-front\\app\\src\\Components\\VideoDeviceMR\\AddJobForm.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":4,"column":5,"nodeType":"150","messageId":"151","endLine":4,"endColumn":16},{"ruleId":"142","replacedBy":"152"},{"ruleId":"144","replacedBy":"153"},{"ruleId":"142","replacedBy":"154"},{"ruleId":"144","replacedBy":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],"@typescript-eslint/no-unused-vars","'CardContent' is defined but never used.","Identifier","unusedVar",["156"],["157"],["156"],["157"],"no-global-assign","no-unsafe-negation"]